svg {
	width: 100%;
	height: 100%;
}

.hidden {
	display: none;
	visibility: hidden;
}

//	For test purposes only button
.button--test {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 100;
}

// To remove 'required' elements from screen e.g. radiobuttons
.outside {
	// position: absolute;
	// top: -99999px;
}



button,input {
    &.button--default {
        // settings van de kro
        border-radius: 5px;
        align-items: center;
        min-width: 66px;
        height: 50px;
        padding: 0 20px 2px;
        outline: none;
        line-height: 1;
        background: $main-blue;
        color: $main-white;
        cursor: pointer;
        border: 1px solid transparent;
        -webkit-transition: all .4s ease;
        transition: all .4s ease;
        margin-top: $margin-article-text-elements;
        font-family: "relative-medium";
        font-size: 1em;
        font-weight: 100;

        @media (min-width: $bp-med) {
            // width: auto;
        }
    }
    
    &:disabled {
        background: $main-gray;
    }

    &.button__select {
        background: $light-gray;
        color: $main-black;
    }
    &.button__select--selected {
        background: $main-orange;
        color: $main-white;
    }
}


body {
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	main {
		#article-container {
			position: relative;
			top: 0;
			left: 0;

			&.animation-active {
				transition: left 1s;
			}
		
			> article {
				box-sizing: border-box;                
				position: absolute;
				width: 100vw;
				height: 100vh;
				top: 0;
				overflow: hidden;
				@for $i from 1 to 30 {
					&:nth-child(#{$i}) {
						left: 100vw * ($i - 1);
					}
				}


				// not for data visualisatie
				&:not(.data-vis) {
				// default propertisch
					h2 {
						font-size: 1.5em;
						font-family: "relative-bold";
						margin-bottom: $margin-article-text-elements;
					}
					
					// background svg
					> svg { 
						position: absolute;
						top: 0;
						left: 0;
						pointer-events: none;
					}

					section {
						// overlay section (blue overlay)
						&.overlay {
							svg {
								height: 100vh;
								transform: translate(0px, 0px) scale(13);
								transition: transform 1s;
							}
						}
	
						// text content section
						&:not(.overlay) {
							border-radius: $border-radius;
							background-color: rgb(240, 241, 241);
							padding: 25px 50px;
							max-width: 30em;
							margin: 1em;
							.button--go-to-next-article {
								&:hover {
									opacity: .8;
								}
							}
						}
					}

				}

				// for data visualisatie
				&.data-vis {
					section {
						box-sizing: border-box;

						@media (min-width: $bp-small) and (max-width: $bp-med)  { // and (max-width: $bp-med)
							max-width: 30em;
							margin: auto;
						}
					
						h2 {
							font-size: 2em;
							font-family: "tisa-pro";
							margin-bottom: $margin-article-text-elements;
						}

						.wrapper {
							position: relative;
							overflow-y: hidden;

							// mobile
							@media (max-width: $bp-small) {
								&:not(.wrapper--not-expand) {

									// disable the gradient and the expander button
									.hide-text-gradient, .button--expander {
										display: none;
										visibility: hidden;
									}

									// enable the de-expander button
									.button--de-expander {
										background: rgba(0,0,0,0) url("../assets/icons/readLessArrow.svg") no-repeat; 
										background-position: center center;
										background-size: 1em;                                        
										height: 2rem;
										bottom: 0;
										left: 0;
										width: 100%;  

										border: none;
										border-bottom: 1px solid $main-black;
										cursor: pointer;
									}
								}
								&.wrapper--not-expand {

									// disable the de-expander button
									.button--de-expander {
										display: none;
										visibility: hidden;                                   
									}

									// enable the gradient and the expander button
									height: 4.3em;

									.button--expander, .hide-text-gradient {
										position: absolute;
									}

									.button--expander {
										background: rgba(0,0,0,0) url("../assets/icons/readMoreArrow.svg") no-repeat; 
										background-position: center bottom;
										background-size: 1em;

										height: 2rem;
										bottom: 0;
										left: 0;
										width: 100%;
										border: none;
										
										cursor: pointer;
										color: $main-blue;
									}



									.hide-text-gradient {
										top: 0;
										left: 0;
										height: 100%;
										width: 100%;
										pointer-events: none;
									/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#ffffff+0,ffffff+100&0+8,1+77 */
										background: -moz-linear-gradient(top, rgba(255,255,255,0) 0%, rgba(255,255,255,0) 8%, rgba(255,255,255,1) 77%, rgba(255,255,255,1) 100%); /* FF3.6-15 */
										background: -webkit-linear-gradient(top, rgba(255,255,255,0) 0%,rgba(255,255,255,0) 8%,rgba(255,255,255,1) 77%,rgba(255,255,255,1) 100%); /* Chrome10-25,Safari5.1-6 */
										background: linear-gradient(to bottom, rgba(255,255,255,0) 0%,rgba(255,255,255,0) 8%,rgba(255,255,255,1) 77%,rgba(255,255,255,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
										filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff',GradientType=0 ); /* IE6-9 */
									}
								}
							}

							// bigger than mobile
							@media (min-width: $bp-small) {
								.hide-text-gradient, .button--expander, .button--de-expander {
									display: none;
									visibility: hidden;
								}

							}

						}
					}
				}




				p {
					color: $main-black;
					margin-bottom: $margin-paragraph-elements;
					line-height: 1.4em;
					&:last-of-type {
						margin-bottom: 0;
					}
				}
			}
		}
	}
}


/////////////
// overlay //


article {
    $overlay-effect-size: 200vmax;
    position: relative;
    .overlay {
        height: 100%;
        width: 100%;
        span {
            position: absolute;
            display: flex;

            width: 120%;
            left: -10%;
            // @media (max-width: $bp-small) {
            //     width: 60vmin;
            // }
            // @media (min-width: $bp-small) and (max-width: $bp-med) {
            //     width: 50vmin;
            // }

            // @media (min-width: $bp-med) {
            //     width: 40vh;
            // }

            &.on-top {
                top: calc(-2rem - #{$default-button-height});
            }
            &:not(.on-top) {
                bottom: calc(-2rem - #{$default-button-height});
            }
            
            button.button--default {
                background-color: #ffa101;
                display: block;
                margin: 0;
                text-align: center;
                font-size: 80%;
                &:not(:last-of-type) {
                    margin-right: 1em;
                    
                }
                flex-grow: 1;
                padding: 0;
            }
        }
    }
    .overlay-effect {

        transition: left 0.5s, right 0.5s, height 0.5s, width 0.5s;

        height: $overlay-effect-size;
        width: $overlay-effect-size;
        border: 200vmax solid $main-blue;
        border-radius: 50%;
        // pointer-events: none;
        position: absolute;
        left: -250vmax;
        top: -250vmax;
        &.overlay-effect--focus {
            @media (max-width: $bp-small) {
                height: 60vmin;
                width: 60vmin;
            }
            @media (min-width: $bp-small) and (max-width: $bp-med) {
                height: 50vmin;
                width: 50vmin;
            }

            @media (min-width: $bp-med) {
                height: 40vh;
                width: 40vh;
            }
        }
        &.overlay-effect--fill {
            height: 0;
            width: 0;
        }
    }

    &#route-2 {
        .overlay-effect {
            &.overlay-effect--focus {
                @media (max-width: $bp-small) {
                    left: calc(-200vmax + 50vw - 30vmin);
                    top: calc(-200vmax + 90vh - 60vmin);
                }

                @media (min-width: $bp-small) and (max-width: $bp-med) {
                    left: calc(-200vmax + 50vw - 25vmin);
                    top: calc(-200vmax + 90vh - 50vmin);
                }
                @media (min-width: $bp-med) {
                    left: calc(-200vmax + 100vw - 42vh);
                    top: calc(-200vmax + 100vh - 44vh);
                }
            } 
        }
    }
    &#house {
        .overlay-effect {
            &.overlay-effect--focus {
                @media (max-width: $bp-small) {
                    left: calc(-200vmax + 60vw - 30vmin);
                    top: calc(-200vmax + 55vh - 30vmin);
                }

                @media (min-width: $bp-small) and (max-width: $bp-med) {
                    left: calc(-200vmax + 70vw - 25vmin);
                    top: calc(-200vmax + 80vh - 50vmin);
                }
                @media (min-width: $bp-med) {
                    left: calc(-200vmax + 100vw - 50vh);
                    top: calc(-200vmax + 80vh - 40vh);
                }                
            }
        }       
    }
    &#house-num {
        .overlay-effect {
            &.overlay-effect--focus {
                @media (max-width: $bp-small) {
                    left: calc(-200vmax + 48vw - 30vmin);
                    top: calc(-200vmax + 18vh - 30vmin);
                }

                @media (min-width: $bp-small) and (max-width: $bp-med) {
                    left: calc(-200vmax + 52vw - 25vmin);
                    top: calc(-200vmax + 50vh - 50vmin);
                }
                @media (min-width: $bp-med) {
                    left: calc(-200vmax + 58vw - 20vh);
                    top: calc(-200vmax + 20vh - 20vh);
                }                
            }
        }       
    }
    &#open-door {
        .overlay-effect {
            &.overlay-effect--focus {
                @media (max-width: $bp-small) {
                    left: calc(-200vmax + 63vw - 30vmin);
                    top: calc(-200vmax + 24vh - 30vmin);
                }

                @media (min-width: $bp-small) and (max-width: $bp-med) {
                    left: calc(-200vmax + 70vw - 25vmin);
                    top: calc(-200vmax + 50vh - 50vmin);
                }
                @media (min-width: $bp-med) {
                    left: calc(-200vmax + 85vw - 20vh);
                    top: calc(-200vmax + 20vh - 20vh);
                }                
            }
        }  
    }
    &#license-plate {
        .overlay-effect {
            &.overlay-effect--focus {
                @media (max-width: $bp-small) {
                    left: calc(-200vmax + 50vw - 30vmin);
                    top: calc(-200vmax + 38vh - 30vmin);
                }

                @media (min-width: $bp-small) and (max-width: $bp-med) {
                    left: calc(-200vmax + 51vw - 25vmin);
                    top: calc(-200vmax + 40vh - 25vmin);
                }
                @media (min-width: $bp-med) {
                    left: calc(-200vmax + 43vw - 20vh);
                    top: calc(-200vmax + 60vh - 20vh);
                }                
            }
        }  
    }
}

// overlay //
/////////////
